{"code":"\"use strict\";\r\nconst rxjs_1 = require(\"rxjs\");\r\nconst ng2_pagination_1 = require(\"ng2-pagination\");\r\nconst meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nconst parties_collection_1 = require(\"../../../../both/collections/parties.collection\");\r\nconst tmeasday_publish_counts_1 = require(\"meteor/tmeasday:publish-counts\");\r\nconst angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nlet PartiesList = class PartiesList {\r\n    constructor(paginationService) {\r\n        this.paginationService = paginationService;\r\n        this.pageSize = new rxjs_1.Subject();\r\n        this.curPage = new rxjs_1.Subject();\r\n        this.nameOrder = new rxjs_1.Subject();\r\n        this.partiesSize = 0;\r\n        this.location = new rxjs_1.Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.imagesSubs = meteor_rxjs_1.MeteorObservable.subscribe('images').subscribe();\r\n        this.optionsSub = rxjs_1.Observable.combineLatest(this.pageSize, this.curPage, this.nameOrder, this.location).subscribe(([pageSize, curPage, nameOrder, location]) => {\r\n            const options = {\r\n                limit: pageSize,\r\n                skip: (curPage - 1) * pageSize,\r\n                sort: { name: nameOrder }\r\n            };\r\n            this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage);\r\n            if (this.partiesSub) {\r\n                this.partiesSub.unsubscribe();\r\n            }\r\n            this.partiesSub = meteor_rxjs_1.MeteorObservable.subscribe('parties', options, location).subscribe(() => {\r\n                this.parties = parties_collection_1.Parties.find({}, {\r\n                    sort: {\r\n                        name: nameOrder\r\n                    }\r\n                }).zone();\r\n            });\r\n        });\r\n        this.paginationService.register({\r\n            id: this.paginationService.defaultId,\r\n            itemsPerPage: 10,\r\n            currentPage: 1,\r\n            totalItems: this.partiesSize\r\n        });\r\n        this.pageSize.next(10);\r\n        this.curPage.next(1);\r\n        this.nameOrder.next(1);\r\n        this.location.next('');\r\n        this.autorunSub = meteor_rxjs_1.MeteorObservable.autorun().subscribe(() => {\r\n            this.partiesSize = tmeasday_publish_counts_1.Counts.get('numberOfParties');\r\n            this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);\r\n        });\r\n    }\r\n    removeParty(party) {\r\n        parties_collection_1.Parties.remove(party._id);\r\n    }\r\n    search(value) {\r\n        this.curPage.next(1);\r\n        this.location.next(value);\r\n    }\r\n    onPageChanged(page) {\r\n        this.curPage.next(page);\r\n    }\r\n    changeSortOrder(nameOrder) {\r\n        this.nameOrder.next(parseInt(nameOrder));\r\n    }\r\n    isOwner(party) {\r\n        return this.user && this.user._id === party.owner;\r\n    }\r\n    ngOnDestroy() {\r\n        this.partiesSub.unsubscribe();\r\n        this.optionsSub.unsubscribe();\r\n        this.autorunSub.unsubscribe();\r\n        this.imagesSubs.unsubscribe();\r\n    }\r\n};\r\nPartiesList = __decorate([\r\n    angular2_meteor_accounts_ui_1.InjectUser('user'),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ng2_pagination_1.PaginationService !== \"undefined\" && ng2_pagination_1.PaginationService) === \"function\" && _a || Object])\r\n], PartiesList);\r\nexports.PartiesList = PartiesList;\r\nvar _a;\r\n//# sourceMappingURL=parties-list.class.js.map","sourceMap":{"version":3,"file":"parties-list.class.js","sourceRoot":"","sources":["client/imports/app/shared-components/parties-list.class.ts"],"names":[],"mappings":"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","sourcesContent":["import {OnDestroy, OnInit} from \"@angular/core\";\nimport {Observable, Subscription, Subject} from \"rxjs\";\nimport {Party} from \"../../../../both/models/party.model\";\nimport {PaginationService} from \"ng2-pagination\";\nimport {MeteorObservable} from \"meteor-rxjs\";\nimport {Parties} from \"../../../../both/collections/parties.collection\";\nimport {Counts} from \"meteor/tmeasday:publish-counts\";\nimport {InjectUser} from \"angular2-meteor-accounts-ui\";\n\ninterface Pagination {\n    limit: number;\n    skip: number;\n}\n\ninterface Options extends Pagination {\n    [key: string]: any\n}\n\n@InjectUser('user')\nexport class PartiesList implements OnInit, OnDestroy {\n    parties: Observable<Party[]>;\n    partiesSub: Subscription;\n    pageSize: Subject<number> = new Subject<number>();\n    curPage: Subject<number> = new Subject<number>();\n    nameOrder: Subject<number> = new Subject<number>();\n    optionsSub: Subscription;\n    partiesSize: number = 0;\n    autorunSub: Subscription;\n    location: Subject<string> = new Subject<string>();\n    user: Meteor.User;\n    imagesSubs: Subscription;\n\n    constructor(private paginationService: PaginationService) {\n\n    }\n\n    ngOnInit() {\n        this.imagesSubs = MeteorObservable.subscribe('images').subscribe();\n\n        this.optionsSub = Observable.combineLatest(\n            this.pageSize,\n            this.curPage,\n            this.nameOrder,\n            this.location\n        ).subscribe(([pageSize, curPage, nameOrder, location]) => {\n            const options: Options = {\n                limit: pageSize as number,\n                skip: ((curPage as number) - 1) * (pageSize as number),\n                sort: { name: nameOrder as number }\n            };\n\n            this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);\n\n            if (this.partiesSub) {\n                this.partiesSub.unsubscribe();\n            }\n\n            this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {\n                this.parties = Parties.find({}, {\n                    sort: {\n                        name: nameOrder\n                    }\n                }).zone();\n            });\n        });\n\n        this.paginationService.register({\n            id: this.paginationService.defaultId,\n            itemsPerPage: 10,\n            currentPage: 1,\n            totalItems: this.partiesSize\n        });\n\n        this.pageSize.next(10);\n        this.curPage.next(1);\n        this.nameOrder.next(1);\n        this.location.next('');\n\n        this.autorunSub = MeteorObservable.autorun().subscribe(() => {\n            this.partiesSize = Counts.get('numberOfParties');\n            this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);\n        });\n    }\n\n    removeParty(party: Party): void {\n        Parties.remove(party._id);\n    }\n\n    search(value: string): void {\n        this.curPage.next(1);\n        this.location.next(value);\n    }\n\n    onPageChanged(page: number): void {\n        this.curPage.next(page);\n    }\n\n    changeSortOrder(nameOrder: string): void {\n        this.nameOrder.next(parseInt(nameOrder));\n    }\n\n    isOwner(party: Party): boolean {\n        return this.user && this.user._id === party.owner;\n    }\n\n    ngOnDestroy() {\n        this.partiesSub.unsubscribe();\n        this.optionsSub.unsubscribe();\n        this.autorunSub.unsubscribe();\n        this.imagesSubs.unsubscribe();\n    }\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["both/models/party.model.ts","both/collections/parties.collection.ts"],"refFiles":[],"refTypings":[],"mappings":{"../../../../both/models/party.model":{"resolvedPath":"both/models/party.model","external":false},"../../../../both/collections/parties.collection":{"resolvedPath":"both/collections/parties.collection","external":false}}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/shared-components/parties-list.class.ts","message":"Cannot find module '@angular/core'.","line":1,"column":33},{"code":2307,"fileName":"client/imports/app/shared-components/parties-list.class.ts","message":"Cannot find module 'rxjs'.","line":2,"column":49},{"code":2307,"fileName":"client/imports/app/shared-components/parties-list.class.ts","message":"Cannot find module 'ng2-pagination'.","line":4,"column":33},{"code":2307,"fileName":"client/imports/app/shared-components/parties-list.class.ts","message":"Cannot find module 'meteor-rxjs'.","line":5,"column":32},{"code":2307,"fileName":"client/imports/app/shared-components/parties-list.class.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":8,"column":26},{"code":2503,"fileName":"client/imports/app/shared-components/parties-list.class.ts","message":"Cannot find namespace 'Meteor'.","line":30,"column":11}]},"hash":"4df2dc7e5c4fe4286a6d69dcf67a2f231149b73d"}