{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst accounts_base_1 = require(\"meteor/accounts-base\");\r\nconst signup_component_html_1 = require(\"./signup.component.html\");\r\nlet SignupComponent = class SignupComponent {\r\n    constructor(router, zone, formBuilder) {\r\n        this.router = router;\r\n        this.zone = zone;\r\n        this.formBuilder = formBuilder;\r\n    }\r\n    ngOnInit() {\r\n        this.signupForm = this.formBuilder.group({\r\n            email: ['', forms_1.Validators.required],\r\n            password: ['', forms_1.Validators.required]\r\n        });\r\n        this.error = '';\r\n    }\r\n    signup() {\r\n        if (this.signupForm.valid) {\r\n            accounts_base_1.Accounts.createUser({\r\n                email: this.signupForm.value.email,\r\n                password: this.signupForm.value.password\r\n            }, (err) => {\r\n                if (err) {\r\n                    this.zone.run(() => {\r\n                        this.error = err;\r\n                    });\r\n                }\r\n                else {\r\n                    this.router.navigate(['/']);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\nSignupComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'signup',\r\n        template: signup_component_html_1.default\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _a || Object, typeof (_b = typeof core_1.NgZone !== \"undefined\" && core_1.NgZone) === \"function\" && _b || Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" && _c || Object])\r\n], SignupComponent);\r\nexports.SignupComponent = SignupComponent;\r\nvar _a, _b, _c;\r\n//# sourceMappingURL=signup.component.js.map","sourceMap":{"version":3,"file":"signup.component.js","sourceRoot":"","sources":["client/imports/app/auth/signup.component.ts"],"names":[],"mappings":";AAAA,wCAAwD;AACxD,0CAAoE;AACpE,4CAAyC;AACzC,wDAAgD;AAEhD,mEAA+C;AAM/C,IAAa,eAAe,GAA5B;IAII,YAAoB,MAAc,EAAU,IAAY,EAAU,WAAwB;QAAtE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE9F,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,MAAM;QACF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,wBAAQ,CAAC,UAAU,CAAC;gBAChB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;gBAClC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;aAC3C,EAAE,CAAC,GAAG;gBACH,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;wBACV,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;oBACrB,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;CACJ,CAAA;AA/BY,eAAe;IAJ3B,gBAAS,CAAC;QACP,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAR,+BAAQ;KACX,CAAC;yDAK8B,eAAM,oBAAN,eAAM,sDAAgB,aAAM,oBAAN,aAAM,sDAAuB,mBAAW,oBAAX,mBAAW;GAJjF,eAAe,CA+B3B;AA/BY,0CAAe","sourcesContent":["import {Component, OnInit, NgZone} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport template from './signup.component.html';\n\n@Component({\n    selector: 'signup',\n    template\n})\nexport class SignupComponent implements OnInit {\n    signupForm: FormGroup;\n    error: string;\n\n    constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.signupForm = this.formBuilder.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        this.error = '';\n    }\n\n    signup() {\n        if (this.signupForm.valid) {\n            Accounts.createUser({\n                email: this.signupForm.value.email,\n                password: this.signupForm.value.password\n            }, (err) => {\n                if (err) {\n                    this.zone.run(() => {\n                        this.error = err;\n                    });\n                } else {\n                    this.router.navigate(['/']);\n                }\n            });\n        }\n    }\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"refFiles":[],"refTypings":[],"mappings":{}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/auth/signup.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":41},{"code":2307,"fileName":"client/imports/app/auth/signup.component.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/auth/signup.component.ts","message":"Cannot find module '@angular/router'.","line":3,"column":24},{"code":2307,"fileName":"client/imports/app/auth/signup.component.ts","message":"Cannot find module 'meteor/accounts-base'.","line":4,"column":26}]},"hash":"d3d423a1282c4f2d786199bd20c632334719d282"}