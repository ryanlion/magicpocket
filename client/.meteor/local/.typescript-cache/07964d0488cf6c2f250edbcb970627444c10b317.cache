{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst Observable_1 = require(\"rxjs/Observable\");\r\nconst Subject_1 = require(\"rxjs/Subject\");\r\nconst meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nconst ng2_pagination_1 = require(\"ng2-pagination\");\r\nconst tmeasday_publish_counts_1 = require(\"meteor/tmeasday:publish-counts\");\r\nconst angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nrequire(\"rxjs/add/operator/combineLatest\");\r\nconst parties_collection_1 = require(\"../../../../both/collections/parties.collection\");\r\nconst parties_list_component_scss_1 = require(\"./parties-list.component.scss\");\r\nconst parties_list_component_html_1 = require(\"./parties-list.component.html\");\r\nlet PartiesListComponent = class PartiesListComponent {\r\n    constructor(paginationService) {\r\n        this.paginationService = paginationService;\r\n        this.pageSize = new Subject_1.Subject();\r\n        this.curPage = new Subject_1.Subject();\r\n        this.nameOrder = new Subject_1.Subject();\r\n        this.partiesSize = 0;\r\n        this.location = new Subject_1.Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.optionsSub = Observable_1.Observable.combineLatest(this.pageSize, this.curPage, this.nameOrder, this.location).subscribe(([pageSize, curPage, nameOrder, location]) => {\r\n            const options = {\r\n                limit: pageSize,\r\n                skip: (curPage - 1) * pageSize,\r\n                sort: { name: nameOrder }\r\n            };\r\n            this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage);\r\n            if (this.partiesSub) {\r\n                this.partiesSub.unsubscribe();\r\n            }\r\n            this.partiesSub = meteor_rxjs_1.MeteorObservable.subscribe('parties', options, location).subscribe(() => {\r\n                this.parties = parties_collection_1.Parties.find({}, {\r\n                    sort: {\r\n                        name: nameOrder\r\n                    }\r\n                }).zone();\r\n            });\r\n        });\r\n        this.paginationService.register({\r\n            id: this.paginationService.defaultId,\r\n            itemsPerPage: 10,\r\n            currentPage: 1,\r\n            totalItems: this.partiesSize\r\n        });\r\n        this.pageSize.next(10);\r\n        this.curPage.next(1);\r\n        this.nameOrder.next(1);\r\n        this.location.next('');\r\n        this.autorunSub = meteor_rxjs_1.MeteorObservable.autorun().subscribe(() => {\r\n            this.partiesSize = tmeasday_publish_counts_1.Counts.get('numberOfParties');\r\n            this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);\r\n        });\r\n    }\r\n    removeParty(party) {\r\n        parties_collection_1.Parties.remove(party._id);\r\n    }\r\n    isOwner(party) {\r\n        return this.user && this.user._id === party.owner;\r\n    }\r\n    search(value) {\r\n        this.curPage.next(1);\r\n        this.location.next(value);\r\n    }\r\n    onPageChanged(page) {\r\n        this.curPage.next(page);\r\n    }\r\n    changeSortOrder(nameOrder) {\r\n        this.nameOrder.next(parseInt(nameOrder));\r\n    }\r\n    ngOnDestroy() {\r\n        this.partiesSub.unsubscribe();\r\n        this.optionsSub.unsubscribe();\r\n        this.autorunSub.unsubscribe();\r\n    }\r\n};\r\nPartiesListComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'parties-list',\r\n        template: parties_list_component_html_1.default,\r\n        styles: [parties_list_component_scss_1.default]\r\n    }),\r\n    angular2_meteor_accounts_ui_1.InjectUser('user'),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ng2_pagination_1.PaginationService !== \"undefined\" && ng2_pagination_1.PaginationService) === \"function\" && _a || Object])\r\n], PartiesListComponent);\r\nexports.PartiesListComponent = PartiesListComponent;\r\nvar _a;\r\n//# sourceMappingURL=parties-list.component.js.map","sourceMap":{"version":3,"file":"parties-list.component.js","sourceRoot":"","sources":["client/imports/app/parties/parties-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MeteorObservable } from 'meteor-rxjs';\nimport { PaginationService } from 'ng2-pagination';\nimport { Counts } from 'meteor/tmeasday:publish-counts';\nimport { InjectUser } from \"angular2-meteor-accounts-ui\";\n\nimport 'rxjs/add/operator/combineLatest';\n\nimport { Parties } from '../../../../both/collections/parties.collection';\nimport { Party } from '../../../../both/models/party.model';\nimport style from './parties-list.component.scss';\n\nimport template from './parties-list.component.html';\n\ninterface Pagination {\n  limit: number;\n  skip: number;\n}\n\ninterface Options extends Pagination {\n  [key: string]: any\n}\n\n@Component({\n  selector: 'parties-list',\n  template,\n  styles: [ style ]\n})\n@InjectUser('user')\nexport class PartiesListComponent implements OnInit, OnDestroy {\n  parties: Observable<Party[]>;\n  partiesSub: Subscription;\n  pageSize: Subject<number> = new Subject<number>();\n  curPage: Subject<number> = new Subject<number>();\n  nameOrder: Subject<number> = new Subject<number>();\n  optionsSub: Subscription;\n  partiesSize: number = 0;\n  autorunSub: Subscription;\n  location: Subject<string> = new Subject<string>();\n  user: Meteor.User;\n\n  constructor(\n    private paginationService: PaginationService\n  ) {}\n\n  ngOnInit() {\n    this.optionsSub = Observable.combineLatest(\n      this.pageSize,\n      this.curPage,\n      this.nameOrder,\n      this.location\n    ).subscribe(([pageSize, curPage, nameOrder, location]) => {\n      const options: Options = {\n        limit: pageSize as number,\n        skip: ((curPage as number) - 1) * (pageSize as number),\n        sort: { name: nameOrder as number }\n      };\n\n      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);\n\n      if (this.partiesSub) {\n        this.partiesSub.unsubscribe();\n      }\n      \n      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {\n        this.parties = Parties.find({}, {\n          sort: {\n            name: nameOrder\n          }\n        }).zone();\n      });\n    });\n\n    this.paginationService.register({\n      id: this.paginationService.defaultId,\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.partiesSize\n    });\n\n    this.pageSize.next(10);\n    this.curPage.next(1);\n    this.nameOrder.next(1);\n    this.location.next('');\n\n    this.autorunSub = MeteorObservable.autorun().subscribe(() => {\n      this.partiesSize = Counts.get('numberOfParties');\n      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);\n    });\n  }\n\n  removeParty(party: Party): void {\n    Parties.remove(party._id);\n  }\n\n  isOwner(party: Party): boolean {\n    return this.user && this.user._id === party.owner;\n  }\n\n  search(value: string): void {\n    this.curPage.next(1);\n    this.location.next(value);\n  }\n\n  onPageChanged(page: number): void {\n    this.curPage.next(page);\n  }\n\n  changeSortOrder(nameOrder: string): void {\n    this.nameOrder.next(parseInt(nameOrder));\n  }\n\n  ngOnDestroy() {\n    this.partiesSub.unsubscribe();\n    this.optionsSub.unsubscribe();\n    this.autorunSub.unsubscribe();\n  }\n}\n"]},"version":"1","isExternal":true,"dependencies":{"modules":["both/collections/parties.collection.ts","both/models/party.model.ts"],"refFiles":[],"refTypings":[],"mappings":{"../../../../both/collections/parties.collection":{"resolvedPath":"both/collections/parties.collection","external":false},"../../../../both/models/party.model":{"resolvedPath":"both/models/party.model","external":false}}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":46},{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module 'rxjs/Observable'.","line":2,"column":28},{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module 'rxjs/Subject'.","line":3,"column":25},{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module 'rxjs/Subscription'.","line":4,"column":30},{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":5,"column":34},{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module 'ng2-pagination'.","line":6,"column":35},{"code":2307,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":8,"column":28},{"code":2503,"fileName":"client/imports/app/parties/parties-list.component.ts","message":"Cannot find namespace 'Meteor'.","line":43,"column":9}]},"hash":"07964d0488cf6c2f250edbcb970627444c10b317"}