{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst parties_collection_1 = require(\"../../../../both/collections/parties.collection\");\r\nconst angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nconst parties_form_component_html_1 = require(\"./parties-form.component.html\");\r\nconst parties_form_component_scss_1 = require(\"./parties-form.component.scss\");\r\nlet PartiesFormComponent = class PartiesFormComponent {\r\n    constructor(formBuilder) {\r\n        this.formBuilder = formBuilder;\r\n        this.newPartyPosition = { lat: 37.4292, lng: -122.1381 };\r\n        this.images = [];\r\n    }\r\n    ngOnInit() {\r\n        this.addForm = this.formBuilder.group({\r\n            name: ['', forms_1.Validators.required],\r\n            description: [],\r\n            location: ['', forms_1.Validators.required],\r\n            public: [false]\r\n        });\r\n    }\r\n    mapClicked($event) {\r\n        this.newPartyPosition = $event.coords;\r\n    }\r\n    addParty() {\r\n        if (!Meteor.userId()) {\r\n            alert('Please log in to add a party');\r\n            return;\r\n        }\r\n        if (this.addForm.valid) {\r\n            parties_collection_1.Parties.insert({\r\n                name: this.addForm.value.name,\r\n                description: this.addForm.value.description,\r\n                location: {\r\n                    name: this.addForm.value.location,\r\n                    lat: this.newPartyPosition.lat,\r\n                    lng: this.newPartyPosition.lng\r\n                },\r\n                images: this.images,\r\n                public: this.addForm.value.public,\r\n                owner: Meteor.userId()\r\n            });\r\n            this.addForm.reset();\r\n        }\r\n    }\r\n    onImage(imageId) {\r\n        this.images.push(imageId);\r\n    }\r\n};\r\nPartiesFormComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'parties-form',\r\n        template: parties_form_component_html_1.default,\r\n        styles: [parties_form_component_scss_1.default]\r\n    }),\r\n    angular2_meteor_accounts_ui_1.InjectUser(\"user\"),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" && _a || Object])\r\n], PartiesFormComponent);\r\nexports.PartiesFormComponent = PartiesFormComponent;\r\nvar _a;\r\n//# sourceMappingURL=parties-form.component.js.map","sourceMap":{"version":3,"file":"parties-form.component.js","sourceRoot":"","sources":["client/imports/app/parties/parties-form.component.ts"],"names":[],"mappings":";AAAA,wCAAkD;AAClD,0CAAoE;AACpE,wFAA0E;AAC1E,6EAAyD;AACzD,+EAAqD;AACrD,+EAAkD;AAQlD,IAAa,oBAAoB,GAAjC;IAKE,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJlC,qBAAgB,GAA8B,EAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAC,CAAC;QAC7E,WAAM,GAAa,EAAE,CAAC;IAInB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,KAAK,CAAC;SAChB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,8BAA8B,CAAC,CAAC;YACtC,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACvB,4BAAO,CAAC,MAAM,CAAC;gBACb,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;gBAC7B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW;gBAC3C,QAAQ,EAAE;oBACR,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;oBACjC,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG;oBAC9B,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG;iBAC/B;gBACD,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM;gBACjC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE;aACvB,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAED,OAAO,CAAC,OAAe;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AAjDY,oBAAoB;IANhC,gBAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAR,qCAAQ;QACR,MAAM,EAAE,CAAE,qCAAK,CAAE;KAClB,CAAC;IACD,wCAAU,CAAC,MAAM,CAAC;yDAOM,mBAAW,oBAAX,mBAAW;GANvB,oBAAoB,CAiDhC;AAjDY,oDAAoB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Parties } from '../../../../both/collections/parties.collection';\nimport { InjectUser } from \"angular2-meteor-accounts-ui\";\nimport template from './parties-form.component.html';\nimport style from './parties-form.component.scss';\n\n@Component({\n  selector: 'parties-form',\n  template,\n  styles: [ style ]\n})\n@InjectUser(\"user\")\nexport class PartiesFormComponent implements OnInit {\n  addForm: FormGroup;\n  newPartyPosition: {lat:number, lng: number} = {lat: 37.4292, lng: -122.1381};\n  images: string[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: [],\n      location: ['', Validators.required],\n      public: [false]\n    });\n  }\n\n  mapClicked($event) {\n    this.newPartyPosition = $event.coords;\n  }\n\n  addParty(): void {\n    if (!Meteor.userId()) {\n      alert('Please log in to add a party');\n      return;\n    }\n\n    if (this.addForm.valid) {\n      Parties.insert({\n        name: this.addForm.value.name,\n        description: this.addForm.value.description,\n        location: {\n          name: this.addForm.value.location,\n          lat: this.newPartyPosition.lat,\n          lng: this.newPartyPosition.lng\n        },\n        images: this.images,\n        public: this.addForm.value.public,\n        owner: Meteor.userId()\n      });\n\n      this.addForm.reset();\n    }\n  }\n\n  onImage(imageId: string) {\n    this.images.push(imageId);\n  }\n}\n"]},"version":"1","isExternal":true,"dependencies":{"modules":["both/collections/parties.collection.ts"],"refFiles":[],"refTypings":[],"mappings":{"../../../../both/collections/parties.collection":{"resolvedPath":"both/collections/parties.collection","external":false}}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/parties/parties-form.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":35},{"code":2307,"fileName":"client/imports/app/parties/parties-form.component.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/parties/parties-form.component.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":4,"column":28},{"code":2304,"fileName":"client/imports/app/parties/parties-form.component.ts","message":"Cannot find name 'Meteor'.","line":37,"column":10},{"code":2304,"fileName":"client/imports/app/parties/parties-form.component.ts","message":"Cannot find name 'Meteor'.","line":53,"column":16}]},"hash":"38022802a8681cc2015b7d880fbd7ca01ba7f52d"}