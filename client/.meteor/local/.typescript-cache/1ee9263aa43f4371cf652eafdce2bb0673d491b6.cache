{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst parties_upload_component_html_1 = require(\"./parties-upload.component.html\");\r\nconst parties_upload_component_scss_1 = require(\"./parties-upload.component.scss\");\r\nconst images_methods_1 = require(\"../../../../both/methods/images.methods\");\r\nconst rxjs_1 = require(\"rxjs\");\r\nconst meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nconst images_collection_1 = require(\"../../../../both/collections/images.collection\");\r\nlet PartiesUploadComponent = class PartiesUploadComponent {\r\n    constructor() {\r\n        this.fileIsOver = false;\r\n        this.uploading = false;\r\n        this.filesArray = [];\r\n        this.files = new rxjs_1.Subject();\r\n        this.onFile = new core_1.EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.files.subscribe((filesArray) => {\r\n            meteor_rxjs_1.MeteorObservable.autorun().subscribe(() => {\r\n                if (this.thumbsSubscription) {\r\n                    this.thumbsSubscription.unsubscribe();\r\n                    this.thumbsSubscription = undefined;\r\n                }\r\n                this.thumbsSubscription = meteor_rxjs_1.MeteorObservable.subscribe(\"thumbs\", filesArray).subscribe(() => {\r\n                    this.thumbs = images_collection_1.Thumbs.find({\r\n                        originalStore: 'images',\r\n                        originalId: {\r\n                            $in: filesArray\r\n                        }\r\n                    }).zone();\r\n                });\r\n            });\r\n        });\r\n    }\r\n    fileOver(fileIsOver) {\r\n        this.fileIsOver = fileIsOver;\r\n    }\r\n    onFileDrop(file) {\r\n        this.uploading = true;\r\n        images_methods_1.upload(file)\r\n            .then((result) => {\r\n            this.uploading = false;\r\n            this.addFile(result);\r\n        })\r\n            .catch((error) => {\r\n            this.uploading = false;\r\n            console.log(`Something went wrong!`, error);\r\n        });\r\n    }\r\n    addFile(file) {\r\n        this.filesArray.push(file._id);\r\n        this.files.next(this.filesArray);\r\n        this.onFile.emit(file._id);\r\n    }\r\n    reset() {\r\n        this.filesArray = [];\r\n        this.files.next(this.filesArray);\r\n    }\r\n};\r\n__decorate([\r\n    core_1.Output(),\r\n    __metadata(\"design:type\", typeof (_a = typeof core_1.EventEmitter !== \"undefined\" && core_1.EventEmitter) === \"function\" && _a || Object)\r\n], PartiesUploadComponent.prototype, \"onFile\", void 0);\r\nPartiesUploadComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'parties-upload',\r\n        template: parties_upload_component_html_1.default,\r\n        styles: [parties_upload_component_scss_1.default]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], PartiesUploadComponent);\r\nexports.PartiesUploadComponent = PartiesUploadComponent;\r\nvar _a;\r\n//# sourceMappingURL=parties-upload.component.js.map","sourceMap":{"version":3,"file":"parties-upload.component.js","sourceRoot":"","sources":["client/imports/app/parties/parties-upload.component.ts"],"names":[],"mappings":";AAAA,wCAAsE;AAEtE,mFAAuD;AACvD,mFAAoD;AAEpD,4EAAiE;AACjE,+BAAuD;AACvD,6CAA6C;AAE7C,sFAAsE;AAOtE,IAAa,sBAAsB,GAAnC;IASE;QARA,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAa,EAAE,CAAC;QAC1B,UAAK,GAAsB,IAAI,cAAO,EAAY,CAAC;QAGzC,WAAM,GAAyB,IAAI,mBAAY,EAAU,CAAC;IAErD,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,UAAU;YAC9B,8BAAgB,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC;gBACnC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;oBACtC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;gBACtC,CAAC;gBAED,IAAI,CAAC,kBAAkB,GAAG,8BAAgB,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC;oBACnF,IAAI,CAAC,MAAM,GAAG,0BAAM,CAAC,IAAI,CAAC;wBACxB,aAAa,EAAE,QAAQ;wBACvB,UAAU,EAAE;4BACV,GAAG,EAAE,UAAU;yBAChB;qBACF,CAAC,CAAC,IAAI,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,UAAmB;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,uBAAM,CAAC,IAAI,CAAC;aACT,IAAI,CAAC,CAAC,MAAM;YACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK;YACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,IAAI;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;CACF,CAAA;AApDW;IAAT,aAAM,EAAE;kDAAS,mBAAY,oBAAZ,mBAAY;sDAAsC;AAPzD,sBAAsB;IALlC,gBAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,QAAQ,EAAR,uCAAQ;QACR,MAAM,EAAE,CAAE,uCAAK,CAAE;KAClB,CAAC;;GACW,sBAAsB,CA2DlC;AA3DY,wDAAsB","sourcesContent":["import {Component, OnInit, EventEmitter, Output} from '@angular/core';\n\nimport template from './parties-upload.component.html';\nimport style from './parties-upload.component.scss';\n\nimport { upload } from '../../../../both/methods/images.methods';\nimport {Subject, Subscription, Observable} from \"rxjs\";\nimport {MeteorObservable} from \"meteor-rxjs\";\nimport {Thumb} from \"../../../../both/models/image.model\";\nimport {Thumbs} from \"../../../../both/collections/images.collection\";\n\n@Component({\n  selector: 'parties-upload',\n  template,\n  styles: [ style ]\n})\nexport class PartiesUploadComponent implements OnInit {\n  fileIsOver: boolean = false;\n  uploading: boolean = false;\n  filesArray: string[] = [];\n  files: Subject<string[]> = new Subject<string[]>();\n  thumbsSubscription: Subscription;\n  thumbs: Observable<Thumb[]>;\n  @Output() onFile: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit() {\n    this.files.subscribe((filesArray) => {\n      MeteorObservable.autorun().subscribe(() => {\n        if (this.thumbsSubscription) {\n          this.thumbsSubscription.unsubscribe();\n          this.thumbsSubscription = undefined;\n        }\n\n        this.thumbsSubscription = MeteorObservable.subscribe(\"thumbs\", filesArray).subscribe(() => {\n          this.thumbs = Thumbs.find({\n            originalStore: 'images',\n            originalId: {\n              $in: filesArray\n            }\n          }).zone();\n        });\n      });\n    });\n  }\n\n  fileOver(fileIsOver: boolean): void {\n    this.fileIsOver = fileIsOver;\n  }\n\n  onFileDrop(file: File): void {\n    this.uploading = true;\n\n    upload(file)\n      .then((result) => {\n        this.uploading = false;\n        this.addFile(result);\n      })\n      .catch((error) => {\n        this.uploading = false;\n        console.log(`Something went wrong!`, error);\n      });\n  }\n\n  addFile(file) {\n    this.filesArray.push(file._id);\n    this.files.next(this.filesArray);\n    this.onFile.emit(file._id);\n  }\n\n  reset() {\n    this.filesArray = [];\n    this.files.next(this.filesArray);\n  }\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":["both/methods/images.methods.ts","both/models/image.model.ts","both/collections/images.collection.ts"],"refFiles":[],"refTypings":[],"mappings":{"../../../../both/methods/images.methods":{"resolvedPath":"both/methods/images.methods","external":false},"../../../../both/models/image.model":{"resolvedPath":"both/models/image.model","external":false},"../../../../both/collections/images.collection":{"resolvedPath":"both/collections/images.collection","external":false}}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/parties/parties-upload.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":55},{"code":2307,"fileName":"client/imports/app/parties/parties-upload.component.ts","message":"Cannot find module 'rxjs'.","line":7,"column":49},{"code":2307,"fileName":"client/imports/app/parties/parties-upload.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":8,"column":32}]},"hash":"1ee9263aa43f4371cf652eafdce2bb0673d491b6"}