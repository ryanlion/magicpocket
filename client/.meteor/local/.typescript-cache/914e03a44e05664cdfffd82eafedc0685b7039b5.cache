{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst meteor_1 = require(\"meteor/meteor\");\r\nconst login_component_html_1 = require(\"./login.component.html\");\r\nlet LoginComponent = class LoginComponent {\r\n    constructor(router, zone, formBuilder) {\r\n        this.router = router;\r\n        this.zone = zone;\r\n        this.formBuilder = formBuilder;\r\n    }\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n            email: ['', forms_1.Validators.required],\r\n            password: ['', forms_1.Validators.required]\r\n        });\r\n        this.error = '';\r\n    }\r\n    login() {\r\n        if (this.loginForm.valid) {\r\n            meteor_1.Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {\r\n                this.zone.run(() => {\r\n                    if (err) {\r\n                        this.error = err;\r\n                    }\r\n                    else {\r\n                        this.router.navigate(['/']);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\nLoginComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'login',\r\n        template: login_component_html_1.default\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _a || Object, typeof (_b = typeof core_1.NgZone !== \"undefined\" && core_1.NgZone) === \"function\" && _b || Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" && _c || Object])\r\n], LoginComponent);\r\nexports.LoginComponent = LoginComponent;\r\nvar _a, _b, _c;\r\n//# sourceMappingURL=login.component.js.map","sourceMap":{"version":3,"file":"login.component.js","sourceRoot":"","sources":["client/imports/app/auth/login.component.ts"],"names":[],"mappings":";AAAA,wCAAwD;AACxD,0CAAoE;AACpE,4CAAyC;AAEzC,0CAAuC;AAEvC,iEAA8C;AAM9C,IAAa,cAAc,GAA3B;IAII,YAAoB,MAAc,EAAU,IAAY,EAAU,WAAwB;QAAtE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE9F,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,KAAK;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACvB,eAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG;gBACpF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACV,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACN,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;oBACrB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChC,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;CACJ,CAAA;AA5BY,cAAc;IAJ1B,gBAAS,CAAC;QACP,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAR,8BAAQ;KACX,CAAC;yDAK8B,eAAM,oBAAN,eAAM,sDAAgB,aAAM,oBAAN,aAAM,sDAAuB,mBAAW,oBAAX,mBAAW;GAJjF,cAAc,CA4B1B;AA5BY,wCAAc","sourcesContent":["import {Component, OnInit, NgZone} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Meteor } from 'meteor/meteor';\n\nimport template from './login.component.html';\n\n@Component({\n    selector: 'login',\n    template\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    error: string;\n\n    constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        this.error = '';\n    }\n\n    login() {\n        if (this.loginForm.valid) {\n            Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {\n                this.zone.run(() => {\n                    if (err) {\n                        this.error = err;\n                    } else {\n                        this.router.navigate(['/']);\n                    }\n                });\n            });\n        }\n    }\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"refFiles":[],"refTypings":[],"mappings":{}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":41},{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module '@angular/router'.","line":3,"column":24},{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module 'meteor/meteor'.","line":5,"column":24}]},"hash":"914e03a44e05664cdfffd82eafedc0685b7039b5"}