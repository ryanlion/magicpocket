{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst accounts_base_1 = require(\"meteor/accounts-base\");\r\nconst login_component_mobile_html_1 = require(\"./login.component.mobile.html\");\r\nlet MobileLoginComponent = class MobileLoginComponent {\r\n    constructor(router, zone, formBuilder) {\r\n        this.router = router;\r\n        this.zone = zone;\r\n        this.formBuilder = formBuilder;\r\n        this.error = '';\r\n        this.isStepTwo = false;\r\n    }\r\n    ngOnInit() {\r\n        this.phoneForm = this.formBuilder.group({\r\n            phone: ['', forms_1.Validators.required]\r\n        });\r\n        this.verifyForm = this.formBuilder.group({\r\n            code: ['', forms_1.Validators.required]\r\n        });\r\n    }\r\n    send() {\r\n        if (this.phoneForm.valid) {\r\n            accounts_base_1.Accounts.requestPhoneVerification(this.phoneForm.value.phone, (err) => {\r\n                this.zone.run(() => {\r\n                    if (err) {\r\n                        this.error = err.reason || err;\r\n                    }\r\n                    else {\r\n                        this.phone = this.phoneForm.value.phone;\r\n                        this.error = '';\r\n                        this.isStepTwo = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    verify() {\r\n        if (this.verifyForm.valid) {\r\n            accounts_base_1.Accounts.verifyPhone(this.phone, this.verifyForm.value.code, (err) => {\r\n                this.zone.run(() => {\r\n                    if (err) {\r\n                        this.error = err.reason || err;\r\n                    }\r\n                    else {\r\n                        this.router.navigate(['/']);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\nMobileLoginComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'login',\r\n        template: login_component_mobile_html_1.default\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _a || Object, typeof (_b = typeof core_1.NgZone !== \"undefined\" && core_1.NgZone) === \"function\" && _b || Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" && _c || Object])\r\n], MobileLoginComponent);\r\nexports.MobileLoginComponent = MobileLoginComponent;\r\nvar _a, _b, _c;\r\n//# sourceMappingURL=login.component.mobile.js.map","sourceMap":{"version":3,"file":"login.component.mobile.js","sourceRoot":"","sources":["client/imports/app/auth/login.component.mobile.ts"],"names":[],"mappings":";AAAA,wCAAwD;AACxD,0CAAoE;AACpE,4CAAyC;AACzC,wDAAgD;AAEhD,+EAAqD;AAMrD,IAAa,oBAAoB,GAAjC;IAOE,YAAoB,MAAc,EAAU,IAAY,EAAU,WAAwB;QAAtE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAN1F,UAAK,GAAW,EAAE,CAAC;QAInB,cAAS,GAAY,KAAK,CAAC;IAEkE,CAAC;IAE9F,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,wBAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG;gBAChE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACR,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;oBACjC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;wBACxC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;wBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACxB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGD,MAAM;QACJ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,wBAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG;gBAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACR,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;oBACjC,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;CACF,CAAA;AAlDY,oBAAoB;IAJhC,gBAAS,CAAC;QACT,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAR,qCAAQ;KACT,CAAC;yDAQ4B,eAAM,oBAAN,eAAM,sDAAgB,aAAM,oBAAN,aAAM,sDAAuB,mBAAW,oBAAX,mBAAW;GAP/E,oBAAoB,CAkDhC;AAlDY,oDAAoB","sourcesContent":["import {Component, OnInit, NgZone} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport template from './login.component.mobile.html';\n\n@Component({\n  selector: 'login',\n  template\n})\nexport class MobileLoginComponent implements OnInit {\n  error: string = '';\n  phoneForm: FormGroup;\n  phone: string;\n  verifyForm: FormGroup;\n  isStepTwo: boolean = false;\n\n  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.phoneForm = this.formBuilder.group({\n      phone: ['', Validators.required]\n    });\n\n    this.verifyForm = this.formBuilder.group({\n        code: ['', Validators.required]\n    });\n  }\n\n  send() {\n    if (this.phoneForm.valid) {\n      Accounts.requestPhoneVerification(this.phoneForm.value.phone, (err) => {\n        this.zone.run(() => {\n          if (err) {\n            this.error = err.reason || err;\n          } else {\n            this.phone = this.phoneForm.value.phone;\n            this.error = '';\n            this.isStepTwo = true;\n          }\n        });\n      });\n    }\n  }\n\n\n  verify() {\n    if (this.verifyForm.valid) {\n      Accounts.verifyPhone(this.phone, this.verifyForm.value.code, (err) => {\n        this.zone.run(() => {\n          if (err) {\n            this.error = err.reason || err;\n          }\n          else {\n            this.router.navigate(['/']);\n          }\n        });\n      });\n    }\n  }\n}"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"refFiles":[],"refTypings":[],"mappings":{}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/auth/login.component.mobile.ts","message":"Cannot find module '@angular/core'.","line":1,"column":41},{"code":2307,"fileName":"client/imports/app/auth/login.component.mobile.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/auth/login.component.mobile.ts","message":"Cannot find module '@angular/router'.","line":3,"column":24}]},"hash":"0875486df68c9232b379118dbd954c7df2a29353"}