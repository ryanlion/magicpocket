{"code":"\"use strict\";\r\nconst core_1 = require(\"@angular/core\");\r\nconst router_1 = require(\"@angular/router\");\r\nconst meteor_1 = require(\"meteor/meteor\");\r\nconst meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nconst angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nconst users_collection_1 = require(\"../../../../both/collections/users.collection\");\r\nrequire(\"rxjs/add/operator/map\");\r\nconst parties_collection_1 = require(\"../../../../both/collections/parties.collection\");\r\nconst party_details_component_html_1 = require(\"./party-details.component.html\");\r\nconst party_details_component_scss_1 = require(\"./party-details.component.scss\");\r\nlet PartyDetailsComponent = class PartyDetailsComponent {\r\n    constructor(route) {\r\n        this.route = route;\r\n        this.centerLat = 37.4292;\r\n        this.centerLng = -122.1381;\r\n    }\r\n    get lat() {\r\n        return this.party && this.party.location.lat;\r\n    }\r\n    get lng() {\r\n        return this.party && this.party.location.lng;\r\n    }\r\n    mapClicked($event) {\r\n        this.party.location.lat = $event.coords.lat;\r\n        this.party.location.lng = $event.coords.lng;\r\n    }\r\n    ngOnInit() {\r\n        this.paramsSub = this.route.params\r\n            .map(params => params['partyId'])\r\n            .subscribe(partyId => {\r\n            this.partyId = partyId;\r\n            if (this.partySub) {\r\n                this.partySub.unsubscribe();\r\n            }\r\n            this.partySub = meteor_rxjs_1.MeteorObservable.subscribe('party', this.partyId).subscribe(() => {\r\n                this.party = parties_collection_1.Parties.findOne(this.partyId);\r\n                this.getUsers(this.party);\r\n            });\r\n            if (this.uninvitedSub) {\r\n                this.uninvitedSub.unsubscribe();\r\n            }\r\n            this.uninvitedSub = meteor_rxjs_1.MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {\r\n                this.getUsers(this.party);\r\n                /*this.users = Users.find({\r\n                  _id: {\r\n                    $ne: Meteor.userId()\r\n                   }\r\n                 }).zone();*/\r\n            });\r\n        });\r\n    }\r\n    get isOwner() {\r\n        return this.party && this.user && this.user._id === this.party.owner;\r\n    }\r\n    getUsers(party) {\r\n        if (party) {\r\n            this.users = users_collection_1.Users.find({\r\n                _id: {\r\n                    $nin: party.invited || [],\r\n                    $ne: meteor_1.Meteor.userId()\r\n                }\r\n            }).zone();\r\n        }\r\n    }\r\n    saveParty() {\r\n        if (!meteor_1.Meteor.userId()) {\r\n            alert('Please log in to change this party');\r\n            return;\r\n        }\r\n        parties_collection_1.Parties.update(this.party._id, {\r\n            $set: {\r\n                name: this.party.name,\r\n                description: this.party.description,\r\n                location: this.party.location,\r\n                'public': this.party.public\r\n            }\r\n        });\r\n    }\r\n    get isPublic() {\r\n        return this.party && this.party.public;\r\n    }\r\n    get isInvited() {\r\n        if (this.party && this.user) {\r\n            const invited = this.party.invited || [];\r\n            return invited.indexOf(this.user._id) !== -1;\r\n        }\r\n        return false;\r\n    }\r\n    invite(user) {\r\n        meteor_rxjs_1.MeteorObservable.call('invite', this.party._id, user._id).subscribe(() => {\r\n            alert('User successfully invited.');\r\n        }, (error) => {\r\n            alert(`Failed to invite due to ${error}`);\r\n        });\r\n    }\r\n    reply(rsvp) {\r\n        meteor_rxjs_1.MeteorObservable.call('reply', this.party._id, rsvp).subscribe(() => {\r\n            alert('You successfully replied.');\r\n        }, (error) => {\r\n            alert(`Failed to reply due to ${error}`);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.paramsSub.unsubscribe();\r\n        this.partySub.unsubscribe();\r\n        this.uninvitedSub.unsubscribe();\r\n    }\r\n};\r\nPartyDetailsComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'party-details',\r\n        template: party_details_component_html_1.default,\r\n        styles: [party_details_component_scss_1.default]\r\n    }),\r\n    angular2_meteor_accounts_ui_1.InjectUser('user'),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _a || Object])\r\n], PartyDetailsComponent);\r\nexports.PartyDetailsComponent = PartyDetailsComponent;\r\nvar _a;\r\n//# sourceMappingURL=party-details.component.js.map","sourceMap":{"version":3,"file":"party-details.component.js","sourceRoot":"","sources":["client/imports/app/parties/party-details.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Meteor } from 'meteor/meteor';\nimport { MeteorObservable } from 'meteor-rxjs';\nimport { InjectUser } from \"angular2-meteor-accounts-ui\";\nimport { Users } from '../../../../both/collections/users.collection';\nimport { User } from '../../../../both/models/user.model';\nimport { MouseEvent } from \"angular2-google-maps/core\";\n\nimport 'rxjs/add/operator/map';\n\nimport { Parties } from '../../../../both/collections/parties.collection';\nimport { Party } from '../../../../both/models/party.model';\n\nimport template from './party-details.component.html';\nimport style from './party-details.component.scss';\n\n@Component({\n  selector: 'party-details',\n  template,\n  styles: [ style ]\n})\n@InjectUser('user')\nexport class PartyDetailsComponent implements OnInit, OnDestroy {\n  partyId: string;\n  paramsSub: Subscription;\n  party: Party;\n  partySub: Subscription;\n  users: Observable<User>;\n  uninvitedSub: Subscription;\n  user: Meteor.User;\n  centerLat: number = 37.4292;\n  centerLng: number = -122.1381;\n\n  constructor(\n    private route: ActivatedRoute\n  ) {}\n\n  get lat(): number {\n    return this.party && this.party.location.lat;\n  }\n\n  get lng(): number {\n    return this.party && this.party.location.lng;\n  }\n\n  mapClicked($event: MouseEvent) {\n    this.party.location.lat = $event.coords.lat;\n    this.party.location.lng = $event.coords.lng;\n  }\n\n  ngOnInit() {\n    this.paramsSub = this.route.params\n      .map(params => params['partyId'])\n      .subscribe(partyId => {\n        this.partyId = partyId;\n        \n        if (this.partySub) {\n          this.partySub.unsubscribe();\n        }\n\n        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {\n          this.party = Parties.findOne(this.partyId);\n          this.getUsers(this.party);\n        });\n        \n        if (this.uninvitedSub) {\n          this.uninvitedSub.unsubscribe();\n        }\n \n        this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {\n           this.getUsers(this.party);\n           /*this.users = Users.find({\n             _id: {\n               $ne: Meteor.userId()\n              }\n            }).zone();*/\n        });\n      });\n  }\n\n  get isOwner(): boolean {\n    return this.party && this.user && this.user._id === this.party.owner;\n  }\n\n  getUsers(party: Party) {\n    if (party) {\n      this.users = Users.find({\n        _id: {\n          $nin: party.invited || [],\n          $ne: Meteor.userId()\n        }\n      }).zone();\n    }\n  }\n\n  saveParty() {\n    if (!Meteor.userId()) {\n      alert('Please log in to change this party');\n      return;\n    }\n    \n    Parties.update(this.party._id, {\n      $set: {\n        name: this.party.name,\n        description: this.party.description,\n        location: this.party.location,\n        'public': this.party.public\n      }\n    });\n  }\n\n  get isPublic(): boolean {\n    return this.party && this.party.public;\n  }\n \n  get isInvited(): boolean {\n    if (this.party && this.user) {\n      const invited = this.party.invited || [];\n \n      return invited.indexOf(this.user._id) !== -1;\n    }\n \n    return false;\n  }\n\n  invite(user: Meteor.User) {\n    MeteorObservable.call('invite', this.party._id, user._id).subscribe(() => {\n      alert('User successfully invited.');\n    }, (error) => {\n      alert(`Failed to invite due to ${error}`);\n    });\n  }\n\n  reply(rsvp: string) {\n    MeteorObservable.call('reply', this.party._id, rsvp).subscribe(() => {\n      alert('You successfully replied.');\n    }, (error) => {\n      alert(`Failed to reply due to ${error}`);\n    });\n  }\n\n  ngOnDestroy() {\n    this.paramsSub.unsubscribe();\n    this.partySub.unsubscribe();\n    this.uninvitedSub.unsubscribe();\n  }\n}\n"]},"version":"1","isExternal":true,"dependencies":{"modules":["both/collections/users.collection.ts","both/models/user.model.ts","both/collections/parties.collection.ts","both/models/party.model.ts"],"refFiles":[],"refTypings":[],"mappings":{"../../../../both/collections/users.collection":{"resolvedPath":"both/collections/users.collection","external":false},"../../../../both/models/user.model":{"resolvedPath":"both/models/user.model","external":false},"../../../../both/collections/parties.collection":{"resolvedPath":"both/collections/parties.collection","external":false},"../../../../both/models/party.model":{"resolvedPath":"both/models/party.model","external":false}}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":46},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module '@angular/router'.","line":2,"column":32},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'rxjs/Observable'.","line":3,"column":28},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'rxjs/Subscription'.","line":4,"column":30},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'meteor/meteor'.","line":5,"column":24},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":6,"column":34},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":7,"column":28},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'angular2-google-maps/core'.","line":10,"column":28}]},"hash":"b4c3bb509d1d8f1998ea2792589f546728f7ee3d"}